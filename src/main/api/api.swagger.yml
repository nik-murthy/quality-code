openapi: 3.0.1
info:
  title: Demo Users API
  description: 'This is a sample server Users API.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).'
  termsOfService: http://swagger.io/terms/
  contact:
    email: user@email.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://users.demo.io/v2
  - url: http://users.demo.io/v2
tags:
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Invalid Username Supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        412:
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        429:
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        description: List of user object
        content:
          application/json::
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Invalid Username Supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        412:
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        429:
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid Username Supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        412:
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        429:
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Invalid Username Supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        412:
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        429:
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    patch:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Invalid Username Supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        412:
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        429:
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
components:
  schemas:
    AddressRequest:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        country:
          type: string
        countryCode:
          type: string
    Address:
      type: object
      properties:
        version:
          type: string
        street:
          type: string
        city:
          type: string
        country:
          type: string
        countryCode:
          type: string
    UserRequest:
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        email:
          type: string
        dob:
          type: string
        phone:
          type: string
        address:
          type: object
          $ref: '#/components/schemas/AddressRequest'
        optedIn:
          type: boolean
        lastActive:
          type: string
    User:
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        email:
          type: string
        dob:
          type: string
        phone:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        optedIn:
          type: boolean
        lastActive:
          type: string
      xml:
        name: User
    ApiResponse:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
        message:
          type: string